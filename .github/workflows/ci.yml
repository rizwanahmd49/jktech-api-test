name: API Automation CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - qa
        - prod
      test_suite:
        description: 'Test suite to execute'
        required: true
        default: 'smoke'
        type: choice
        options:
        - smoke
        - regression
        - performance
        - all

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java: [11, 17]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Install dependencies
      run: mvn clean compile test-compile
    
    - name: Run smoke tests
      if: github.event.inputs.test_suite == 'smoke' || github.event.inputs.test_suite == 'all' || github.event_name != 'workflow_dispatch'
      run: mvn test -Denv=${{ github.event.inputs.environment || 'dev' }} -Dgroups=smoke
    
    - name: Run regression tests
      if: github.event.inputs.test_suite == 'regression' || github.event.inputs.test_suite == 'all'
      run: mvn test -Denv=${{ github.event.inputs.environment || 'dev' }} -Dgroups=regression
    
    - name: Run Cucumber tests
      if: github.event.inputs.test_suite == 'regression' || github.event.inputs.test_suite == 'all'
      run: mvn test -Pcucumber -Denv=${{ github.event.inputs.environment || 'dev' }}
    
    - name: Run performance tests
      if: github.event.inputs.test_suite == 'performance' || github.event.inputs.test_suite == 'all'
      run: mvn test -Denv=${{ github.event.inputs.environment || 'dev' }} -Dgroups=performance
    
    - name: Generate code coverage
      run: mvn jacoco:report
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./target/site/jacoco/jacoco.xml
    
    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: target/allure-results
        allure_report: allure-report
        gh_pages: gh-pages
        allure_history: allure-history
    
    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
    
    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-java-${{ matrix.java }}
        path: |
          target/surefire-reports/
          target/cucumber-reports/
          target/extent-reports/
          target/allure-results/
    
    - name: Notify on failure
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        channel: '#ci-cd'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        message: 'API Automation tests failed on ${{ github.ref }}'